# -*-eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t);-*-
 
#+title: Emacs Configuration
#+author: Thomas Freeman
#+date: Time-stamp: <2024-12-31 19:23:41 thomas>
#+description: This org-mode file contains an org-babel implementation of the .emacs or .emacs.d/init.el file.
#+language: en_US
#+property: header-args :results silent :exports code

#+options: html-link-use-abs-url:nil html-postamble:auto
#+options: html-preamble:t html-scripts:nil html-style:t
#+options: html5-fancy:nil tex:t num:nil 
#+html_doctype: xhtml-strict
#+html_container: div
#+html_content_class: content
#+keywords: Emacs
#+html_link_home: index.html
#+html_link_up: index.html

#+SETUPFILE: https://tfree87.github.io/org-html-themes/org/theme-readtheorg.setup
-----


* About this Document

This file was written using Emacs Org Mode. This makes navigating and modifying my Emacs configuration much simpler as I can place different elements of my configuration under separate headings. The code in this file is placed in source code blocks that are tangled to the ~init.el~ file that Emacs will look for upon starting. When this file is saved, the source code blocks that are marked for tangling will write their contents to ~init.el~.

** Tags

Tags are used in this document to help make navigation of the packages easier and to provide additional information about piecing together this Emacs configuration. Below are descriptions of the tags and their meanings:

- deprecated :: This package has been "deprecated" in favor of another package that better integrates with this Emacs configuration or produces a better workflow.
- disabled :: Any package marked with this tag has been disabled due to it causing issues or the package was deprecated.
- GUIX :: Packages managed by GUIX are marked with this tag. There are a number of reasons why a package might be managed by GUIX over using package managers in Emacs:
    
  1. The package requires compilation on the host system (e.g. Pdf Tools and Org-roam). Using the GUIX package manager will manage the compilation automatically. Also, packages that need to be compiled are difficult to run on portable Emacs so they will be left out when Emacs is used as a portable app.
  2. The package is only run on a Linux System with GUIX installed or on the GUIX System Distribution so there is no need to have Emacs manage this package.
  3. The package relies on another program installed on the host system (e.g. Mu4e requires Mu).

- testing :: A package or function that is added and is being tested for use is marked with this tag.
- Windows  :: Customizations exclusively for the use on the Windows operating system are marked with this tag.

* Header for ~init.el~

The following code block will add a header to the ~init.el~ file when it is generated on saving:

#+begin_src emacs-lisp :tangle yes :noweb yes
  ;;; init.el --- Emacs initialization file -*- lexical-binding: t -*-

  ;; Copyright (C) 2022-2024 Thomas Freeman

  ;; Author: Thomas Freeman
  ;; Maintainer: Thomas Freeman
  ;; Keywords: lisp
  ;; Created: 09 Jan 2022

  ;; This program is free software; you can redistribute it and/or modify
  ;; it under the terms of the GNU General Public License as published by
  ;; the Free Software Foundation, either version 3 of the License, or
  ;; (at your option) any later version.

  ;; This program is distributed in the hope that it will be useful,
  ;; but WITHOUT ANY WARRANTY; without even the implied warranty of
  ;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ;; GNU General Public License for more details.

  ;; You should have received a copy of the GNU General Public License
  ;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

  ;;; Commentary:

  ;; This file is an init file for Emacs.
  ;; This file is NOT a part of Emacs.
  ;; This file IS NOT intended to be edited! It was generated by init.org.
  ;; For code comments, see init.org.

  ;;; URL: https://github.com/tfree87/.emacs.d

  ;; For documentation and for editing this file, see the init.org in the
  ;; github repository tfree87/.emacs.d
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;; Code:

  <<emacs_init>>

  ;;; init.el ends here
#+end_src

* Performance Optimization

Reduce the load time for Emacs. See [[https://www.reddit.com/r/emacs/comments/3kqt6e/2_easy_little_known_steps_to_speed_up_emacs_start/][this Reddit post]] for more information.
#+begin_src emacs-lisp  :noweb yes :noweb-ref emacs_init
  (let ((file-name-handler-alist nil))
    <<emacs_modules>>
    (setq gc-cons-threshold 800000))
#+end_src

* Load Path

Add the ~modules~ directory and all of its sub-directories to the ~load-path~.
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (let ((default-directory "~/.emacs.d/modules/"))
    (normal-top-level-add-subdirs-to-load-path))
#+end_src

* Running Emacs as a Portable App

I like to use Emacs at work and at home to boost my productivity, but I often find when I am at work or using another computer using Windows and I cannot always install Emacs to the host system. In this case, I run Emacs from a USB thumb drive so that I can still have access to the power of Emacs even when I am not working on my home personal computer. Running Emacs from a thumb drive has some caveats. For instance, if you are running Emacs from a thumb drive on a work computer and you do not have administrator access, then a lot of features will break. This section contains code that can be used to run Emacs.

** Check for Portable Emacs Instance

When [[file:runemacs.bat][runemacs.bat]] is executed, it will set the environment variable ~EMACS_PORTABLE~ to "Y". By checking for this, we can tell that Emacs that it was executed to be run from a flash drive.
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (defun freemacs/isportable-p ()
    "A function to check whether Emacs was executed as a portable application in Windows by the runemacs.bat script."
    (string= (getenv "EMACS_PORTABLE") "Y"))
 #+end_src
 
** Set Location of Portable Git

Straight.el cannot operate without access to Git. Luckily, there is a portable version of Git ([[https://github.com/sheabunge/GitPortable][sheabunge/GitPortable]]) for Windows that can be installed on the [[https://portableapps.com/][PortableApp]] platform to provide access to Git without having it installed on the host system. After downloading GitPortable, we need to tell Emacs where it can find the binary executable so that Emacs programs can call Git when needed.

The following line code will check to see if Emacs is being run as a portable app and, if it is, then add the path where git.exe can be found to the ~exec-path~ list:

 #+begin_src emacs-lisp :noweb-ref emacs_modules
   (when (freemacs/isportable-p)
     (add-to-list 'exec-path "~/PortableApps/GitPortable/App/Git/bin"))
 #+end_src

* Custom Set Variables

Place custom variables in [[./custom.el]] rather than [[./init.el]] and load it.

#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (setq custom-file "~/.emacs.d/custom.el")
  (load custom-file)
#+end_src

* Helper Functions

Load helper functions required for Emacs initialization. These functions don't rely on external libraries to keep loading fast.

#+begin_src elisp :noweb-ref emacs_modules
  (require 'freemacs-elisp)
#+end_src

* Startup Modules

Modules in this section must be run before the others.

** Straight.el

Load the [[./modules/package-management/freemacs-straight.org][Straight module]].

#+begin_src elisp :noweb-ref emacs_modules
(require 'freemacs-straight)
#+end_src

** Benchmark Init

Use benchmark-init to check the time that it takes to load Emacs.

#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-benchmark-init)
#+END_SRC
** No-littering
Load the [[./modules/startup/freemacs-no-littering.org][No Littering module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-no-littering)
#+end_src
** Whicher
Load the [[./modules/startup/freemacs-whicher.org][Whicher module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-whicher)
#+end_src
* Other Modules
** Aggressive Indent

Load the [[./modules/coding/freemacs-aggressive-indent.org][Aggressive Indent module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-aggressive-indent)
#+end_src

** Centered-Window Mode

Load the [[./modules/theme/freemacs-cwm.org][Centered Window module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-cwm)
#+end_src

** AutoHotKey

Load the [[./modules/coding/freemacs-autohotkey.org][AutoHotKey module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-autohotkey)
#+end_src

** Battery

Load the [[./modules/defaults/freemacs-battery.org][Battery module]].
#+begin_src elisp :noweb-ref emacs_modules
  (require 'freemacs-battery)
#+end_src

** Cape

Load the [[./modules/completion/freemacs-cape.org][Cape module]].
#+begin_src emacs-lisp  :noweb-ref emacs_modules
  (require 'freemacs-cape)
#+end_src

** Consult

Load the [[./modules/completion/freemacs-consult.org][Consult module]].
#+begin_src emacs-lisp  :noweb-ref emacs_modules
  (require 'freemacs-consult)
#+end_src

** Corfu

Load the [[./modules/completion/freemacs-corfu.org][Corfu module]]
#+begin_src emacs-lisp  :noweb-ref emacs_modules
  (require 'freemacs-corfu)
#+end_src

** Dired

Load the [[file:modules/file-tools/freemacs-dired.org][Dired module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-dired)
#+end_src

** Dired Rsync

Load the [[./modules/file-tools/freemacs-drsync.org][Dired Rsync module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-drsync)
#+end_src

** Docker

Load the the [[file:modules/docker/freemacs-docker.org][docker module]].
#+begin_src emacs-lisp  :noweb-ref emacs_modules 
  (require 'freemacs-docker)
#+end_src

** Emacs Defaults

 Changes to the default settings of Emacs in the [[file:modules/defaults/freemacs-defaults.org][defaults module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-defaults)
#+end_src

** Eat

Load the [[./modules/shells/freemacs-eat.org][Eat Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-eat)
#+end_src

** Elfeed

Load the [[./modules/elfeed/freemacs-elfeed.org][Elfeed Module]].
#+begin_src emacs-lisp  :noweb-ref emacs_modules
  (require 'freemacs-elfeed)
#+end_src

** Elfeed Protocol

Load the [[./modules/elfeed/freemacs-elfeed-protocol.el][Elfeed Protocol module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-elfeed-protocol)
#+end_src   

** Embark

Load the [[./modules/completion/freemacs-embark.org][Embark module]]
#+begin_src emacs-lisp  :noweb-ref emacs_modules
  (require 'freemacs-embark)
#+end_src

** Eshell
Load the [[./modules/shells/freemacs-eshell.org][Eshell Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-eshell)
#+end_src

** Fireplace

Load the [[./modules/fun/freemacs-fireplace.org][Fireplace module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-fireplace)
#+end_src

** Function of the Day

Load the [[./modules/help/freemacs-fotd.org][Function of the Day module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-fotd)
#+end_src

** Gnus

Load the [[./modules/email/freemacs-gnus.org][Gnus Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-gnus)
#+end_src

** Help

Load the [[FILE:modules/help/freemacs-help.org][Help module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
   (require 'freemacs-help)
#+end_src

** Hydra

Load the [[./modules/completion/freemacs-hydra.org][Hydra module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-hydra)
#+end_src

** Imenu

Load the [[./modules/defaults/freemacs-imenu.org][Imenu module]].
#+begin_src elisp :noweb-ref emacs_modules
  (require 'freemacs-imenu)
#+end_src

** Graphing

Load the [[file:modules/graphing/freemacs-graphing.org][graphing module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-graphing)
#+end_src

** \LaTeX{}

Configuration for working with \LaTeX documents can be found in the [[file:modules/publishing/freemacs-latex.org][\LaTeX{} module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-latex)
#+end_src

** Ledger

Load the [[file:modules/math/freemacs-ledger.org][Ledger module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-ledger)
#+end_src

** Listen

Add the [[./modules/multimedia/freemacs-listen.org][Listen module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules
  (require 'freemacs-listen)
#+end_src

** Magit

Load the [[./modules/coding/freemacs-magit.org][Magit module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules
  (require 'freemacs-magit)
#+end_src

** Marginalia

Loadt the [[./modules/completion/freemacs-marginalia.org][Marginalia module]].
#+begin_src emacs-lisp  :noweb-ref emacs_modules
  (require 'freemacs-marginalia)
#+end_src

** Markdown

Load the [[File:modules/publishing/freemacs-markdown.org][Markdown module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-markdown)
#+end_src

** Meow Mode

Load the [[./modules/editing/freemacs-meow.org][Meow Mode module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-meow)
#+end_src

** Nerd Icons

Load the [[./modules/theme/freemacs-nerd-icons.org][Nerd Icons module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-nerd-icons)
#+end_src

** Orderless

Load the [[./modules/completion/freemacs-orderless.el][Orderless module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-orderless)
#+end_src

** Org

Load the [[./modules/org/freemacs-org.org][Org Mode module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-org)
#+end_src

** Org Contacts

Load the [[./modules/org/freemacs-org-contacts.org][Org Contacts Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-org-contacts)
#+end_src

** Org Mime

Load the [[./modules/email/freemacs-org-mime.org][Org MIME module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules
  (require 'freemacs-org-mime)
#+end_src

** Org Mind Map

Load the [[./modules/org/freemacs-org-mm.org][Org Mind Map module]]/
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-org-mm)
#+end_src

** Org-QL

Load the [[./modules/org/freemacs-org-ql.org][Org Ql Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-org-ql)
#+end_src

** Org Super Links

Load the [[./modules/org/freemacs-orgsl.org][Org Super Links module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules
  (require 'freemacs-orgsl)
#+end_src

** Ox-publish

Load the [[file:modules/publishing/freemacs-ox-publish.org][ox-publish module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-ox-publish)
#+end_src

** PDF-Tools

Load the [[./modules/publishing/freemacs-pdf.org][PDF module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules
  (require 'freemacs-pdf)
#+end_src
** Session
Load the [[./modules/session/freemacs-session.org][Session Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-session)
#+end_src

** SLIME
Load the SLIME module
#+begin_src emacs-lisp :noweb-ref emacs_modules
  (require 'freemacs-slime)
#+end_src

** Trashed
Load the [[./modules/file-tools/freemacs-trashed.org][Trashed Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-trashed)
#+end_src

** Vertico

Load the [[file:modules/completion/freemacs-completion.org][completion module]]
#+begin_src emacs-lisp :noweb-ref emacs_modules 
    (require 'freemacs-vertico)
#+end_src

** VTerm
Load the [[./modules/shells/freemacs-vterm.org][Vterm Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-vterm)
#+end_src

** Theme style
Load the [[./modules/theme/freemacs-theme.org][Theme Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
    (require 'freemacs-theme)
#+end_src

** Spacious Padding

Load the [[./modules/theme/freemacs-sp.org][Spacious Padding module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules
  (require 'freemacs-sp)
#+end_src

** Academic Writing

Load the [[file:modules/publishing/freemacs-academic-writing.org][academic writing module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-academic-writing)
#+end_src

** Spellchecking

Load the [[./modules/publishing/freemacs-spellcheck.org][Spellcheck module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-spellcheck)
#+end_src

** Winner

Load the [[./modules/defaults/freemacs-winner.org][Winner module]]
#+begin_src elisp :noweb-ref emacs_modules 
(require 'freemacs-winner)
#+end_src

** YASnippet

Load the [[./modules/editing/freemacs-yasnippet.org][YASnippet module]].
#+begin_src emacs-lisp  :noweb-ref emacs_modules
  (require 'freemacs-yasnippet)
#+end_src

** YouTube

Load the [[./modules/youtube/freemacs-youtube.org][YouTube Module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules 
  (require 'freemacs-youtube)
#+end_src

** Emacs Server

Load the [[file:modules/server/freemacs-server.org][server module]].
#+begin_src emacs-lisp :noweb-ref emacs_modules
  (require 'freemacs-server)
#+end_src

