# -*-eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t);-*-

#+title: Corfu  Configuration
#+author: Thomas Freeman
#+date: Time-stamp: <2024-10-26 19:04:45 thomas>
#+language: en_US
#+property: header-args :results silent :exports code

#+options: html-link-use-abs-url:nil html-postamble:auto
#+options: html-preamble:t html-scripts:nil html-style:t
#+options: html5-fancy:nil tex:t num:nil toc:t
#+html_doctype: xhtml-strict
#+html_container: div
#+html_content_class: content
#+keywords: Emacs
#+html_link_home: ../../index.html
#+html_link_up: ../../init.html
#+creator: <a href="https://www.gnu.org/software/emacs/">Emacs</a> 27.1 (<a href="https://orgmode.org">Org</a> mode 9.5.2)

-----


* Install Corfu

#+begin_src emacs-lisp :tangle yes :noweb yes
  (use-package corfu
    :straight (:files (:defaults "extensions/*.el"))
    :init
    (global-corfu-mode)
    (corfu-popupinfo-mode)
    :bind
    (:map corfu-map
          ("TAB" . corfu-next)
          ([tab] . corfu-next)
          ("S-TAB" . corfu-previous)
          ([backtab] . corfu-previous))
    :custom
    (corfu-auto t)
    (corfu-cycle t)
    (corfu-preselect 'prompt)
    (:map corfu-map
          ("TAB" . corfu-next)
          ([tab] . corfu-next)
          ("S-TAB" . corfu-previous)
          ([backtab] . corfu-previous))
  :config
  <<corfu_config>>
  (advice-add 'pcomplete-completions-at-point :around #'cape-wrap-silent)
  (advice-add 'pcomplete-completions-at-point :around #'cape-wrap-purify))
#+end_src

* Unbind RET

Having the "RET" key bound for Corfu becomes very frustrating when trying to enter a newline when the completion window pops up. Unbinding "RET" and using the Tab-and-Go method is preferrable in order to not have to always add an extra space at the end of every line.

#+begin_src emacs-lisp :noweb-ref corfu_config
  (keymap-set corfu-map "RET" `( menu-item "" nil :filter
                                 ,(lambda (&optional _)
                                    (and (derived-mode-p 'eshell-mode 'comint-mode)
                                         #'corfu-send))))
#+end_src

#+begin_src emacs-lisp :tangle yes
  (provide 'freemacs-corfu)
#+end_src
