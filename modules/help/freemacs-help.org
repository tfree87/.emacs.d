# -*-eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t);-*-

#+title: Help Configuration
#+author: Thomas Freeman
#+date: Time-stamp: <2022-07-07 12:43:39 thomas>
#+language: en
#+property: header-args :results silent :exports code
#+options: tex:t

#+options: html-link-use-abs-url:nil html-postamble:auto
#+options: html-preamble:t html-scripts:nil html-style:t
#+options: html5-fancy:nil tex:t
#+html_doctype: xhtml-strict
#+html_container: div
#+html_content_class: content
#+keywords: Emacs
#+html_link_home: ../../index.html
#+html_link_up: ../../init.html
#+creator: <a href="https://www.gnu.org/software/emacs/">Emacs</a> 27.1 (<a href="https://orgmode.org">Org</a> mode 9.5.2)
#+html_head: <style>#org-div-home-and-up { text-align: right; padding-right: 10pt; }</style>

#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup



* Helpful

[[https://github.com/Wilfred/helpful][Helpful]] improves the Emacs help functions by adding new features to the ~*Help*~ buffers such as:

- Links to source code
- Better formatting of docstrings
- Lists of callers
- Keymaps
- Aliases
- And more...

#+begin_src emacs-lisp :tangle yes
  (use-package helpful
    :straight t
    :defer t
    :bind
    ("C-h f" . #'helpful-callable)
    ("C-h v" . #'helpful-variable)
    ("C-h k" . #'helpful-key)
    ("C-c C-d" . #'helpful-at-point)
    ("C-h F" . #'helpful-function)
    ("C-h C" . #'helpful-command))
#+end_src

* Popper

[[https://github.com/karthink/popper][Popper]] lets a user define any window as a short-term pop up window.

#+begin_src emacs-lisp :tangle yes :noweb yes
  (use-package popper
    :straight t
    :bind (("C-`"   . popper-toggle-latest)
           ("M-`"   . popper-cycle)
           ("C-M-`" . popper-toggle-type))
    :init
    <<popper_init>>
    (popper-mode +1)
    (popper-echo-mode +1))
#+end_src

** Popper Buffers

For each buffer that will become a popper pop up buffer, it must be defined below:

#+begin_src emacs-lisp :noweb-ref popper_init
  (setq popper-reference-buffers
          '("\\*Messages\\*"
            "\\*Embark Actions\\*"
            "Output\\*$"
            "\\*Async Shell Command\\*"
            "\\*Whicher Report\\*"
            help-mode
            compilation-mode))
#+end_src

* Which-key

[[https://github.com/justbur/emacs-which-key][Which-key]] provides a pop-up menu when there is a pause in the minibuffer or if executed directly to show the keyboard commands available to the current buffer.

#+begin_src emacs-lisp :tangle yes :noweb yes
  (use-package which-key
    :straight t
    :defer 3
    :custom
    <<wk_custom>>
    :config
    <<wk_config>>
    (which-key-mode))
#+end_src

** Activating Which-key

How to start which-key

*** C-h During Key Combination Entry

Type C-h during any key combination to pop-up which key

#+begin_src emacs-lisp :noweb-ref wk_custom
  (which-key-show-early-on-C-h t)
#+end_src

*** Press <f4> in Any Mode

Use the <f4> key in any major mode to see the key bindings

#+begin_src emacs-lisp :noweb-ref wk_config
  (global-set-key (kbd "<f4>") 'which-key-show-major-mode)
#+end_src

** Which-key Window Location

Set up which-key to use the side window preferably

#+begin_src nnemacs-lisp :noweb-ref wk_config
  (which-key-setup-side-window-right-bottom)
#+end_src

* End

#+begin_src emacs-lisp :tangle yes
  (provide 'freemacs-help)

  ;;; freemacs-help.el ends here
#+end_src
