# -*-eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t);-*-

#+title: Academic Phrases Configuration
#+author: Thomas Freeman
#+date: Time-stamp: <2025-01-03 14:34:26 thomas>
#+language: en_US
#+property: header-args :results silent :exports code

#+options: html-link-use-abs-url:nil html-postamble:auto
#+options: html-preamble:t html-scripts:nil html-style:t
#+options: html5-fancy:nil tex:t num:nil toc:t
#+html_doctype: xhtml-strict
#+html_container: div
#+html_content_class: content
#+keywords: Emacs
#+html_link_home: ../../index.html
#+html_link_up: ../../init.html
#+creator: <a href="https://www.gnu.org/software/emacs/">Emacs</a> 27.1 (<a href="https://orgmode.org">Org</a> mode 9.5.2)
#+html_head: <style>#org-div-home-and-up { text-align: right; padding-right: 10pt; }</style>

#+SETUPFILE: https://tfree87.github.io/org-html-themes/org/theme-readtheorg.setup
-----


* Academic Phrases

[[https://github.com/nashamri/academic-phrases][Academic phrases]] is a package that provides a number of easy-to-use templates for writing academic text if you happen to have writer's block. Calling the function ~M-x academic-phrases~ provides a searchable list of these templates for your use.

#+begin_src emacs-lisp :tangle yes
  (use-package academic-phrases
    :straight t
    :commands academic-phrases
    :defer t)
#+end_src

* Citar

[[https://github.com/emacs-citar/citar][Citar]] is a citation tool that integrates well with Vertico, Embark, and Marginalia.

#+begin_src emacs-lisp :tangle yes :noweb yes
  (use-package citar
    :straight (citar :host github
                     :repo "emacs-citar/citar"
                     :branch "main")
    :defer t
    :after org
    :custom
    (citar-bibliography org-cite-global-bibliography)
    <<citar_customize>>
    :config
    <<citar_config>>)
#+end_src

If the All the Icons package is installed, use it to add icons to Citar.

#+begin_src emacs-lisp :noweb-ref citar_config
  (with-eval-after-load "all-the-icons"
    (setq citar-symbols
          `((file ,(all-the-icons-faicon "file-o" :face 'all-the-icons-green :v-adjust -0.1) . " ")
            (note ,(all-the-icons-material "speaker_notes" :face 'all-the-icons-blue :v-adjust -0.3) . " ")
            (link ,(all-the-icons-octicon "link" :face 'all-the-icons-orange :v-adjust 0.01) . " ")))
    (setq citar-symbol-separator "  "))
#+end_src

Tell Org Cite to use Citar.

#+begin_src emacs-lisp :noweb-ref org_cite_custom
  (org-cite-insert-processor 'citar)
  (org-cite-follow-processor 'citar)
  (org-cite-activate-processor 'citar)
#+end_src

Add Citar history to ~savehist-additional-variables~ so that Citar usage history can be saved across sessions.

#+begin_src emacs-lisp :tangle yes
  (add-to-list 'savehist-additional-variables 'citar-history)
#+end_src

Tell Citar where to find file associated with citation references.

#+begin_src emacs-lisp :noweb-ref citar_customize
  (citar-library-paths '("~/bib/files"))
#+end_src

Tell Citar how to find associated files produced by Zotero (~citar-file-parser-default~) or Mendeley and Calibre (~citar-file-parser-triplet~).

#+begin_src emacs-lisp :noweb-ref citar_config
  (setq citar-file-parser-functions
        '(citar-file--parser-default
          citar-file--parser-triplet))
#+end_src

** Citar Embark

#+begin_src emacs-lisp :tangle yes
  (use-package citar-embark
    :after citar embark
    :no-require t
    :config (citar-embark-mode))
#+End_src

* End

#+begin_src emacs-lisp :tangle yes
  (provide 'freemacs-academic-writing)

  ;;; freemacs-academic-writing.el ends here
#+end_src
