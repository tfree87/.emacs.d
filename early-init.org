# -*- eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t); -*-

#+title: Emacs Early Init
#+authgor: Thomas Freeman
#+date: Time-stamp: <2022-07-07 17:21:30 thomas>
#+language: en_US
#+property: header-args :results silent :exports code

#+options: html-link-use-abs-url:nil html-postamble:auto
#+options: html-preamble:t html-scripts:nil html-style:t
#+options: html5-fancy:nil tex:t num:nil
#+html_doctype: xhtml-strict
#+html_container: div
#+html_content_class: content
#+keywords: Emacs
#+html_link_home: index.html
#+html_link_up: index.html
#+html_head: <style>#org-div-home-and-up { text-align: right; padding-right: 10pt; }</style>

#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup


This file contains Emacs Lisp code that will run /before/ the Emacs [[file:init.el][init.el]] file.

This file was written using Emacs Org Mode. This makes navigating and modifying my Emacs configuration much simpler as I can place different elements of my configuration under separate headings. The code in this file is placed in source code blocks that are tangled to the ~early-init.el~ file that Emacs will look for upon starting. When this file is saved, the source code blocks that are marked for tangling will write their contents to ~early-init.el~.

* Header

The following code block will add a header to the ~early-init.el~ file when it is generated on saving.

#+begin_src emacs-lisp :tangle yes
  ;;; early-init.el --- Emacs early init -*- lexical-binding: t -*-
;; 

;; Author: Thomas Freeman
;; Maintainer: Thomas Freeman
;; Created: 09 Jan 2022

;; URL: https://github.com/tfree87/.emacs.d

;; This file is an early-init file for Emacs. It will be executed before
;; init.el when emacs is loaded.

;; This file IS NOT intended to be edited! It was generated by init.org.

;;; Commentary:

;; For documentation and for editing this file, see the init.org in the
;; github repository tfree87/.emacs.d
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Code:

#+end_src

* Decrease Garbage Collection Frequency

Emacs collects garbage very fequently slowing down the startup process. Emacs normally does a garbage collection every 800 kB. Since I always have the RAM for it, I have set the garbage collection to only happen after 500 MB. Increasing the number above this does not provide any significant gains in startup time as of yet. This idea came from https://blog.d46.us/advanced-emacs-startup/#/.emacs.d/init.el.

#+begin_src emacs-lisp :tangle yes
  (setq gc-cons-threshold 500000000)
#+end_src

* Monitor Package Load Times :guix:

The Benchmark Init package will monitor the load times for package loading as Emacs loads and create a report that can be used to check where optimizations can be made to speed up Emacs loading.

#+begin_src emacs-lisp :tangle yes
  (require 'benchmark-init)
  (add-hook 'after-init-hook 'benchmark-init/deactivate)
#+end_src

* Prevent Unwanted Runtime Compilation

Prevent extra unnecessary runtime compilation for gccemacs. This idea came from the [[https://github.com/hlissner/doom-emacs][Doom Emacs]] ~early-init.el~ file.

#+begin_src emacs-lisp :tangle yes
  (setq native-comp-deferred-compilation nil)
#+end_src

* Disable Emacs Package Manager

In order to prevent conflicts between ~straight.el~ and the Emacs package manager, ~package-enable-at-startup~ should be set to ~nil~. This came from the [[https://github.com/raxod502/straight.el][straight.el]] installation instructions.

#+begin_src emacs-lisp :tangle yes
  (setq package-enable-at-startup nil)
#+end_src

* Reduce Redisplay

To reduce slowdowns caused by early redisplays when loading, the following code will reduce the amount of times Emacs redisplays when setting up windows. This idea came from the [[https://github.com/hlissner/doom-emacs][Doom Emacs]] ~early-init.el~ file.

#+begin_src emacs-lisp :tangle yes
  (setq-default inhibit-redisplay t
                inhibit-message t)
  
  (add-hook 'window-setup-hook
            (lambda ()
              (setq-default inhibit-redisplay nil
                            inhibit-message nil)
              (redisplay)))
#+end_src

* Set Environment to UTF-8

Set the default coding system to UTF-8.This idea came from the [[https://github.com/hlissner/doom-emacs][Doom Emacs]] ~early-init.el~ file.

#+begin_src emacs-lisp :tangle yes
  (set-language-environment "UTF-8")
  (setq default-input-method nil)
#+end_src

* End

#+begin_src emacs-lisp :tangle yes
  ;;; early-init.el ends here
#+end_src
